# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  Compile:
    name: Compile 
    runs-on: Agent-1

    strategy:
      matrix:
        node-version: [23]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Check JS syntax
      run: |
        find . -name "*.js" -print0 | xargs -0 node --check
      shell: bash


  GitleaksScan:
    name: Gitleaks Scan
    runs-on: Agent-1
    needs: Compile
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Cleanup temp gitleaks file
        run: 
          rm -f /tmp/gitleaks.tmp
          rm -rf /tmp/gitleaks-*

      - name: Gitleaks Scan
        uses: gitleaks/gitleaks-action@v2

      - name: Run Gitleaks
        run: gitleaks detect --source . --exit-code 1

  Trivy_file_scan:
    name: trivy file scan
    runs-on: Agent-1
    needs: GitleaksScan
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner in fs mode
      uses: aquasecurity/trivy-action@0.28.0
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'table'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

  sonarqube_scan_frontend:
    name: Sonarqube Scan
    runs-on: Agent-1
    needs: Trivy_file_scan
    
    steps:
    - name: Checkout code 
      uses: actions/checkout@v4

    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v5.3.1 # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
      with:
        projectBaseDir: .
        args: >
          -Dsonar.projectKey=landy-reat-app
          -Dsonar.projectName=landy-reat-app
          -Dsonar.sources=.
          -Dsonar.exclusions=**/node_modules/**,**/dist/**,**/build/**
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  docker_Build_Push:
    name: docker image build & push
    runs-on: ubuntu-24.04
    needs: sonarqube_scan_frontend
    
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: kavindusamaranayake/github-action-app:latest
          file: ./Dockerfile

  Trivy_Image_Scan:
    name: trivy image scan
    runs-on: Agent-1
    needs: docker_Build_Push
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: image
          image-ref: kavindusamaranayake/github-action-app:latest
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

   
